name: create pdf from json

on:
  issues:
    types: [opened]

jobs:
  start_pdf_generation_process:
    runs-on: ubuntu-20.04
    steps:
      - name: clone repository
        uses: actions/checkout@v4
      
      - name: install nodejs
        uses: actions/setup-node@v4
        with:
          node-version: "20"
        
      - name: install repo
        run: npm init -y
      
      - name: install resumed and jsonresume-theme-even package
        run: npm install resumed jsonresume-theme-even
  
      - name: save github issue_body to resume.json file
        run: echo '${{ github.event.issue.body }}' > resume.json

      - name: validate resume.json file
        run: npx resumed validate resume.json

      - name: generate html file from resume.json
        run: npx resumed render --theme jsonresume-theme-even

      - name: display contents of resume.json
        run: cat resume.json
      
      - name: install puppeteer, this helps us to convert html to pdf
        run: npm install puppeteer

      - name: making script executable
        run:  chmod +x htmlToPdf.sh

      - name: generate pdf from html file.
        run: ./htmlToPdf.sh

      - name: commit and push changes
        run: |
              git config --global user.name "github-actions[bot]"
              git config --global user.email "github-actions[bot]@users.noreply.github.com"
              git add resume.pdf
              git commit -m "create new resume.pdf" || echo "No changes to commit"
              git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
        env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: generate a tag
      #   id: tag_version
      #   run: |
      #     TAG="v$(date +%Y%m%d%H%M%S)"  # Creates a timestamp-based tag
      #     echo "TAG=$TAG" >> $GITHUB_ENV
      #     git tag $TAG
      #     git push origin $TAG

      # - name: upload to github releases
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: ${{ env.TAG }}
      #     files: resume.pdf 
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



      - name: generate unique timestamp tag
        id: generate_tag
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)  # Generate timestamp (YYYYMMDDHHMMSS)
          NEW_TAG="release-${TIMESTAMP}"  # Format tag as release-YYYYMMDDHHMMSS
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "Generated tag: $NEW_TAG"
  
      - name: create and push new tag
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ env.NEW_TAG }}
          git push origin ${{ env.NEW_TAG }}
  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          draft: false
          prerelease: false
          files: resume.pdf  
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
      - name: extract and save release download url
        run: |
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.NEW_TAG }}/resume.pdf"
          echo "public download url: $DOWNLOAD_URL"
          echo $DOWNLOAD_URL > download_link.txt
  
      - name: commit updated download url to repo
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add download_link.txt
          git commit -m "updated release download link for ${{ env.NEW_TAG }}"
          git push origin main
